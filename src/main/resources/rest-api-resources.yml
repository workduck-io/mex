Ping:
  handler: com.serverless.pingHandler.Ping
  events:
    - http:
        path: /ping
        cors: true
        method: get

Node:
  handler: com.serverless.nodeHandlers.NodeHandler
  events:
    - httpApi:
        path: /node/{id}
        method: get
        authorizer: mexAuthorizer

    - httpApi:
        path: /node
        method: post
        authorizer: mexAuthorizer

      #deleteNodes( archive them )
    - httpApi:
        path: /node/archive
        method: put
        authorizer: mexAuthorizer

    - httpApi:
        path: /node/unarchive
        method: put
        authorizer: mexAuthorizer

    - httpApi:
        path: /node/{id}/append
        method: post
#        authorizer: mexAuthorizer

    - httpApi:
        path: /node/all/{id}
        method: get
        authorizer: mexAuthorizer

    - httpApi:
        path: /node/{id}/blockUpdate
        method: post
#        authorizer: mexAuthorizer

    - httpApi:
        path: /node/{id}/version/metadata
        method: get
        authorizer: mexAuthorizer

      #delete given nodes ids from archive section ( hence, permanently )
    - httpApi:
        path: /node/archive/delete
        method: post
        authorizer: mexAuthorizer

      #get all archived nodes for a given workspaceID
    - httpApi:
        path: /node/archive/{id}
        method: get
        authorizer: mexAuthorizer
    - httpApi:
        path: /node/public/{id}
        method: get

    - httpApi:
        path: /node/makePublic/{id}
        method: patch
        authorizer: mexAuthorizer

    - httpApi:
        path: /node/makePrivate/{id}
        method: patch
        authorizer: mexAuthorizer
    #copy  or move a block from sourceNode to destinationNode
    - httpApi:
        path: /node/block/movement
        method: patch
        authorizer: mexAuthorizer

    - httpApi:
        path: /node/refactor
        method: post
        authorizer: mexAuthorizer

    - httpApi:
        path: /node/bulkCreate
        method: post
        authorizer: mexAuthorizer

    - httpApi:
        path: /node/shared/{nodeID}
        method: get
        authorizer: mexAuthorizer

    - httpApi:
        path: /node/shared
        method: post
        authorizer: mexAuthorizer

    - httpApi:
        path: /node/shared
        method: put
        authorizer: mexAuthorizer

    - httpApi:
        path: /node/shared
        method: delete
        authorizer: mexAuthorizer

    - httpApi:
        path: /node/shared/update
        method: post
        authorizer: mexAuthorizer

    - httpApi:
        path: /node/{id}/shared/users
        method: get
        authorizer: mexAuthorizer


Snippet:
  handler: com.serverless.snippetHandlers.SnippetHandler
  events:
    - httpApi:
        path: /snippet/{id}
        method: get
        authorizer: mexAuthorizer

    # create/ update a new snippet
    - httpApi:
        path: /snippet
        method: post
        authorizer: mexAuthorizer


    #delete given snippet ids from archive section ( hence, permanently )
    - httpApi:
        path: /snippet/{id}/{version}
        method: delete
        authorizer: mexAuthorizer

    - httpApi:
        path: /snippet/{id}/all
        method: delete
        authorizer: mexAuthorizer

    #get all archived snippets for a given workspaceID
#    - httpApi:
#        path: /snippet/archive/{id}
#        method: get
#        authorizer: mexAuthorizer

    # get a public snippet
    - httpApi:
        path: /snippet/public/{id}/{version}
        method: get

    - httpApi:
        path: /snippet/clone/{id}/{version}
        method: post
        authorizer: mexAuthorizer

    - httpApi:
        path: /snippet/makePublic/{id}/{version}
        method: patch
        authorizer: mexAuthorizer

    - httpApi:
        path: /snippet/makePrivate/{id}/{version}
        method: patch
        authorizer: mexAuthorizer

    # get all versions of a snippet
    - httpApi:
        path: /snippet/{id}/all
        method: get
        authorizer: mexAuthorizer



Namespace:
  handler: com.serverless.namespaceHandlers.NamespaceHandler
  events:
    - httpApi:
        path: /namespace/{id}
        method: get
        authorizer: mexAuthorizer

    - httpApi:
        path: /namespace
        method: post
        authorizer: mexAuthorizer

    - httpApi:
        path: /namespace/update
        method: post
        authorizer: mexAuthorizer

    - httpApi:
        path: /namespace/{id}
        method: delete
        authorizer: mexAuthorizer

    - httpApi:
        path: /namespace/data/{ids}
        method: get
        authorizer: mexAuthorizer



Workspace:
  handler: com.serverless.workspaceHandlers.WorkspaceHandler
  events:
    - httpApi:
        path: /workspace
        method: get
        authorizer: mexAuthorizer

    - httpApi:
        path: /workspace
        method: post
        authorizer: mexAuthorizer

    - httpApi:
        path: /workspace/update
        method: post
        authorizer: mexAuthorizer

    - httpApi:
        path: /workspace
        method: delete
        authorizer: mexAuthorizer

    - httpApi:
        path: /workspace/data/{ids}
        method: get
        authorizer: mexAuthorizer

    - httpApi:
        path: /workspace/hierarchy
        method: get
        authorizer: mexAuthorizer

    - httpApi:
        path: /workspace/refreshHierarchy
        method: patch
        authorizer: mexAuthorizer

User:
  handler: com.serverless.userHandlers.UserHandler
  events:
    - httpApi:
        path : /user/register
        method: post
        authorizer: mexAuthorizer

UserPreference:
  handler: com.serverless.userPreferenceHandlers.UserPreferenceHandler
  events:
    - httpApi:
        path: /userPreference
        method: post
        authorizer: mexAuthorizer

    - httpApi:
        path: /userPreference/{id}/{preferenceType}
        method: get
        authorizer: mexAuthorizer

    - httpApi:
        path: /userPreference/all/{id}
        method: get
        authorizer: mexAuthorizer


UserBookmark:
  handler: com.serverless.userBookmarkHandlers.UserBookmarkHandler
  events:
    #bookmark the node
    - httpApi:
        path: /userBookmark/{userID}/{nodeID}
        method: post
        authorizer: mexAuthorizer

    #delete the bookmark on a particular node
    - httpApi:
        path: /userBookmark/{userID}/{nodeID}
        method: patch
        authorizer: mexAuthorizer

    #get all bookmarks by a particular user
    - httpApi:
        path: /userBookmark/{userID}
        method: get

    #bookmark in batch
    - httpApi:
        path: /userBookmark/batch/{userID}/{ids}
        method: post
        authorizer: mexAuthorizer

    #delete bookmark in batch
    - httpApi:
        path: /userBookmark/batch/{userID}/{ids}
        method: patch
        authorizer: mexAuthorizer


Comment:
  handler: com.serverless.commentHandlers.CommentHandler
  events:
    #create comment
    - httpApi:
        path: /comment
        method: post
        authorizer: mexAuthorizer

    #update comment
    - httpApi:
        path: /comment
        method: patch
        authorizer: mexAuthorizer

    #id -> nodeID/blockID-commentID
    - httpApi:
        path: /comment/{id}
        method: get
        authorizer: mexAuthorizer

    #id -> nodeID/blockID-commentID
    - httpApi:
        path: /comment/{id}
        method: delete
        authorizer: mexAuthorizer

    #get all comments of a node/block/user
    - httpApi:
        path: /comment/all/{id}
        method: get
        authorizer: mexAuthorizer

WorkspaceUpdateTrigger:
  handler: com.serverless.ddbStreamTriggers.workspaceUpdateTrigger.WorkspaceUpdateTrigger
#  events:
#    - stream: arn:aws:dynamodb:us-east-1:418506370286:table/local-mex/stream/2022-02-22T11:31:44.345
#      filterPatterns:
#        - eventName: [MODIFY]
#        - dynamodb:
#            NewImage:
#              itemType:
#                S: Workspace
#        - dynamodb:
#            OldImage:
#              itemType:
#                S: Workspace

NodeArchiveUnarchiveTrigger:
  handler: com.serverless.ddbStreamTriggers.NodeArchiveUnarchiveTrigger

Tag:
  handler: com.serverless.tagHandlers.TagHandler
  events:
    #get all tags of a workspace
    - httpApi:
        path: /tag/all
        method: get
        authorizer: mexAuthorizer

    #get all node ids which have a tag
    - httpApi:
        path: /tag/{tagName}/node
        method: get
        authorizer: mexAuthorizer

InternalTag:
  handler: com.serverless.internalTagHandlers.TagHandler
