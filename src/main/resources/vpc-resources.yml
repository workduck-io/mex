Resources:
  ElasticacheVpc:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
  PrivateSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: ${self:provider.region}a
      CidrBlock: 10.0.1.0/24
      VpcId:
        Ref: ElasticacheVpc
  PrivateRouteTable1:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: ElasticacheVpc
  LambdaSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow all traffic
      GroupName: ${self:service}-${opt:stage, self:provider.stage}-lambdaSecurityGroup
      VpcId:
        Ref: ElasticacheVpc
      SecurityGroupIngress:
        - IpProtocol: '-1'
          CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
        - IpProtocol: '-1'
          CidrIp: 0.0.0.0/0
  VpcEndpointLambda:
    Type: AWS::EC2::VPCEndpoint
    Properties:
      ServiceName: com.amazonaws.${self:provider.region}.lambda
      VpcEndpointType: Interface
      SubnetIds:
        - Ref: PrivateSubnet1
      VpcId:
        Ref: ElasticacheVpc
  ElasticCacheSubnetGroup:
    Type: AWS::ElastiCache::SubnetGroup
    Properties:
      Description: "Cache Subnet Group"
      SubnetIds:
        - Ref: PrivateSubnet1