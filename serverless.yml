# Welcome to Serverless!
#
# This file is the main config file for your service.
# It's very minimal at this point and uses default values.
# You can always add more config options for more control.
# We've included some commented out config examples here.
# Just uncomment any of them to get that config option.
#
# For full config options, check the docs:
#    docs.serverless.com
#
# Happy Coding!
service: mex-backend
# app and org for use with dashboard.serverless.com
#app: your-app-name
#org: your-org-name

# You can pin your service to only deploy with a specific Serverless version
# Check out our docs for more details
frameworkVersion: '2'

provider:
  name: aws
  runtime: java11
  lambdaHashingVersion: 20201221
  environment:
#    AWS_ACCESS_KEY_ID: ${env:AWS_ACCESS_KEY_ID}
#    AWS_SECRET_ACCESS_KEY: ${env:AWS_SECRET_ACCESS_KEY}
    TABLE_NAME: ${env:PRIMARY_TABLE, '${opt:stage, 'local'}-mex'}
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:Scan
            - dynamodb:Query
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
            - dynamodb:DescribeTable
            - dynamodb:BatchWriteItem
            - dynamodb:BatchGetItem
          Resource: 'arn:aws:dynamodb:us-east-1:*:*'
package:
  artifact: target/mex-dev.jar

plugins:
  - serverless-offline
  - serverless-domain-manager

custom:
  serverless-offline:
    noPrependStageInUrl: true
  customDomain:
    domainName: api.workduck.io
    basePath: 'mex'
    stage: ${opt:stage, self:provider.stage}
    createRoute53Record: true
functions:
  - ${file(src/main/resources/rest-api-resources.yml)}


useDotenv: true

resources:
  - ${file(src/main/resources/api-gateway-errors.yml)}
  - ${file(src/main/resources/mex.yml)}
