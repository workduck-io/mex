# Welcome to Serverless!
#
# This file is the main config file for your service.
# It's very minimal at this point and uses default values.
# You can always add more config options for more control.
# We've included some commented out config examples here.
# Just uncomment any of them to get that config option.
#
# For full config options, check the docs:
#    docs.serverless.com
#
# Happy Coding!
service: mex-backend
# app and org for use with dashboard.serverless.com
#app: your-app-name
#org: your-org-name

# You can pin your service to only deploy with a specific Serverless version
# Check out our docs for more details
frameworkVersion: '3'

provider:
  name: aws
  runtime: java11
  stage: local
  region: ${opt:region, 'us-east-1'}
  timeout: 20
  memorySize: 1024
  logRetentionInDays: 7
  environment:
    #AWS_ACCESS_KEY_ID: ${env:AWS_ACCESS_KEY_ID}
    #AWS_SECRET_ACCESS_KEY: ${env:AWS_SECRET_ACCESS_KEY}
    TABLE_NAME: ${opt:stage, 'local'}-mex
    JAVA_TOOL_OPTIONS: -XX:+TieredCompilation -XX:TieredStopAtLevel=1
    STAGE: ${opt:stage, 'local'}
    PUBLIC_NOTE_CACHE_READER_ENDPOINT: ${file(src/main/resources/cache-reader-endpoint.yml)}
    PUBLIC_NOTE_CACHE_ENDPOINT: ${file(src/main/resources/cache-writer-endpoint.yml)}
  iam:
    role:
      statements: ${file(src/main/resources/permissions.yml)}
  endpointType: PRIVATE
  apiGateway:
    resourcePolicy:
    - Effect: Allow
      Principal: '*'
      Action: execute-api:Invoke
      Resource: arn:aws:execute-api:us-east-1:*
      Condition:
        StringEquals:
          aws:sourceVpc: ${self:custom.vpc.vpc.${opt:stage, self:provider.stage}}

  httpApi:
    cors:
      allowedOrigins:
        - "*"
      allowedHeaders:
        - Content-Type
        - X-Amz-Date
        - Authorization
        - X-Api-Key
        - X-Amz-Security-Token
        - X-Amz-User-Agent
        - X-Amzn-Trace-Id
        - mex-workspace-id
        - wd-request-id
#    authorizers:
#      mexAuthorizer:
#        identitySource: $request.header.Authorization
#        issuerUrl:
#          Fn::Join:
#            - ''
#            - - 'https://cognito-idp.'
#              - '${opt:region, self:provider.region}'
#              - '.amazonaws.com/'
#              - '${self:custom.cognitoPoolMap.${opt:stage, self:provider.stage}}' # UserPool ID
#        audience:
#          - '${self:custom.cognitoClientMap.${opt:stage, self:provider.stage}}' # Client ID for Cognito Pool
  logs: ${file(src/main/resources/api-gateway-logs.yml)}

package:
  artifact: target/mex-dev.jar

plugins:
  - serverless-offline
  - serverless-prune-plugin
  - serverless-simple-alias

custom:
  serverless-offline:
    noPrependStageInUrl: true
    useDocker: true
    ignoreJWTSignature: true
    noAuth: true
    httpPort: 4000
#  customDomain:
#    rest:
#      domainName: api-${opt:stage, self:provider.stage}.workduck.io
#      basePath: 'mex'
#      stage: ${opt:stage, self:provider.stage}
#      createRoute53Record: true
#    http:
#      domainName: http-${opt:stage, self:provider.stage}.workduck.io
#      basePath: 'mex'
#      stage: ${opt:stage, self:provider.stage}
#      createRoute53Record: true
#      endpointType: regional
#      apiType: http

  cognitoPoolMap:
    dev: us-east-1_Zu7FAh7hj
    staging: us-east-1_Zu7FAh7hj
    test: us-east-1_O5YTlVrCd
    local: us-east-1_Zu7FAh7hj
    prod: us-east-1_pMnpx4CIF #prod account
  cognitoClientMap:
    dev: 6pvqt64p0l2kqkk2qafgdh13qe
    staging: 6pvqt64p0l2kqkk2qafgdh13qe
    test: 25qd6eq6vv3906osgv8v3f8c6v
    local: 6pvqt64p0l2kqkk2qafgdh13qe
    prod: 5l9s56u8o1use2k56al76sce9f #prod account
  simpleAlias:
    activeAliasName: 'latest'
    useActiveAliasInGateway: true
    makeLambdasActive: true
    aliases: []
  vpc: ${file(src/main/resources/vpc-details.yml)}
  sqsLambdasArn: ${file(src/main/resources/sqs-lambdas-arn.yml)}


functions:
  - ${file(src/main/resources/api-resources.yml)}


useDotenv: true

resources:
  - ${file(src/main/resources/conditions.yml)}
  - ${file(src/main/resources/api-gateway-errors.yml)}
  - ${file(src/main/resources/table-config-prod.yml)}
  - ${file(src/main/resources/table-config-staging.yml)}
  - ${file(src/main/resources/table-config-default.yml)}
  - ${file(src/main/resources/queue-resources-prod.yml)}
  - ${file(src/main/resources/queue-resources.yml)}
  - ${file(src/main/resources/sns-resources.yml)}
  - ${file(src/main/resources/elasticache-resources.yml)}
  - ${file(src/main/resources/ddb-alarms.yml)}
  - ${file(src/main/resources/auto-scaling-policy.yml)}
  - ${file(src/main/resources/snapstart.yml)}