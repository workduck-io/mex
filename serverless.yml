# Welcome to Serverless!
#
# This file is the main config file for your service.
# It's very minimal at this point and uses default values.
# You can always add more config options for more control.
# We've included some commented out config examples here.
# Just uncomment any of them to get that config option.
#
# For full config options, check the docs:
#    docs.serverless.com
#
# Happy Coding!
service: mex-backend
# app and org for use with dashboard.serverless.com
#app: your-app-name
#org: your-org-name

# You can pin your service to only deploy with a specific Serverless version
# Check out our docs for more details
frameworkVersion: '3'

provider:
  name: aws
  runtime: java11
  stage: local
  region: ${opt:region, 'us-east-1'}
  timeout: 20
  memorySize: 1024
  logRetentionInDays: 7
  environment:
    #AWS_ACCESS_KEY_ID: ${env:AWS_ACCESS_KEY_ID}
    #AWS_SECRET_ACCESS_KEY: ${env:AWS_SECRET_ACCESS_KEY}
    TABLE_NAME: ${opt:stage, 'local'}-mex
    JAVA_TOOL_OPTIONS: -XX:+TieredCompilation -XX:TieredStopAtLevel=1
    STAGE: ${opt:stage, 'local'}
    PUBLIC_NOTE_CACHE_READER_ENDPOINT: ${file(src/main/resources/cache-reader-endpoint.yml)}
    PUBLIC_NOTE_CACHE_ENDPOINT: ${file(src/main/resources/cache-writer-endpoint.yml)}
  iam:
    role:
      statements: ${file(src/main/resources/permissions.yml)}
  endpointType: PRIVATE
  apiGateway:
    resourcePolicy: ${file(src/main/resources/api-gateway-resource-policy.yml)}

  logs:
    restApi: ${file(src/main/resources/api-gateway-logs.yml)}

package:
  artifact: target/mex-dev.jar

plugins:
  - serverless-offline
  - serverless-prune-plugin
  - serverless-simple-alias
  - serverless-add-api-key

custom:
  serverless-offline:
    noPrependStageInUrl: true
    useDocker: true
    ignoreJWTSignature: true
    noAuth: true
    httpPort: 4000

  simpleAlias:
    activeAliasName: 'latest'
    useActiveAliasInGateway: true
    makeLambdasActive: true
    aliases: []

  vpc: ${file(src/main/resources/vpc-details.yml)}
  sqsLambdasArn: ${file(src/main/resources/sqs-lambdas-arn.yml)}
  apiKeys: ${file(src/main/resources/api-gateway-keys.yml)}

functions:
  - ${file(src/main/resources/api-resources.yml)}


useDotenv: true

resources:
  - ${file(src/main/resources/conditions.yml)}
  - ${file(src/main/resources/api-gateway-errors.yml)}
  - ${file(src/main/resources/table-config-prod.yml)}
  - ${file(src/main/resources/table-config-staging.yml)}
  - ${file(src/main/resources/table-config-default.yml)}
  - ${file(src/main/resources/queue-resources-prod.yml)}
  - ${file(src/main/resources/queue-resources.yml)}
  - ${file(src/main/resources/sns-resources.yml)}
  - ${file(src/main/resources/elasticache-resources.yml)}
  - ${file(src/main/resources/ddb-alarms.yml)}
  - ${file(src/main/resources/auto-scaling-policy.yml)}
  - ${file(src/main/resources/snapstart.yml)}